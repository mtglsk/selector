#!/bin/sh

# Find a string in the current directory and below
# while automatically ignoring repository metadata.

## THIS MODIFICATION IS INTENDED FOR VIM USE.
## I've added line numbers and removed coloring.
## If you want to use normal findrepo, please visit:
## https://github.com/pixelb/scripts/blob/master/scripts/findrepo

### To use in VIM add those lines to Your .vimrc:
###
### set grep=findrepo (please add it your PATH)
###
### To make grep go silently and open quickfix automatically like ack.vim,
### this could make a good workaround:
###
### command! -nargs=+ Grep :silent grep! <q-args> | botright cw | redraw!
### ca grep Grep

# Licence: LGPLv2
# Author: http://www.pixelbeat.org/

usage() {
(
echo "Usage:    `basename $0` ['grep options'] search_expr [file wildcard]
examples: `basename $0` 'main' '*.[ch]'          #fixed string search
          `basename $0` '(main|mane)' '*.[ch]'   #regular expression search
          `basename $0` '-F' 'main(' '*.[ch]'    #force fixed string search
          `basename $0` '-L -F' 'main(' '*.[ch]' #extra grep options"
) >&2
    exit 1
}

if [ $# -eq 0 ] || [ $# -gt 3 ]; then
    usage
fi

# vim settings
echo | grep --line-number -I "" >/dev/null 2>&1 && vim="--line-number -I"

if [ $# -eq 1 ]; then
    glob='*'   # common shortcut to avoid needing to specify all files
elif [ $# -eq 2 ]; then
    # if $1 begins with a '-' then we might be hitting the
    # ambiguous case where grep options are being specified,
    # so warn with info about (avoiding) the ambiguity
    if ! test "${1##-*}"; then
      echo "\
Warning: treating '$1' as the grep pattern, not extra options.
If this is intended, avoid the warning with an empty first parameter.
If this is not intended, please specify the file wildcard." >&2
    fi
    glob="$2"
elif [ $# -eq 3 ]; then
    grep_options="$1"
    shift
    glob="$2"
fi

#default to -E or -F as appropriate, not -G
if ! printf "%s\n" "$grep_options" |
     grep -E -- "-([EFGP]|regexp|fixed)" >/dev/null 2>&1; then
    #used fixed string matching for speed unless an ERE metacharacter used
    echo "$1" | grep '[.[\()*+?{|^$]' >/dev/null && type="-E" || type="-F"
    grep_options="$grep_options $type"
fi

repodirs=".git .svn CVS .hg .bzr _darcs"
for dir in $repodirs; do
    repo_ign="$repo_ign${repo_ign+" -o "}-name $dir"
done

find . \( -type d -a \( $repo_ign \)  \) -prune -o \
       \( -type f -name "$glob" -print0 \) |
#LANG=C is to work around grep multibyte inefficiencies
#GREP_COLOR="1;37;47" is bright yellow on black bg
GREP_COLOR="1;33;40" LANG=C xargs -0 grep $vim $grep_options -- "$1"
